// Задание 1
const array1 = [1, 5, 4, 10, 0, 3];

for (let i = 0; i < array1.length; i++) {
  console.log(array1[i]);
  if (array1[i] === 10) {
    break;
  }
}

// Критерии оценки:
// - Программа выводит в консоль элементы массива до числа 10 включительно.
// - После вывода числа 10 программа автоматически прекращает работу.
// Используйте цикл for или while для перебора элементов массива и условие if для проверки значения элемента.

// Задание 2
const array2 = [1, 5, 4, 10, 0, 3];

// Используем метод indexOf() для поиска индекса значения 4
const index = array2.indexOf(4);
console.log(index);

// Критерии оценки:
// - В консоль должен быть выведен индекс значения 4 в массиве.
// Подсказка: Для перебора массива и сравнения каждого элемента со значением 4 можно использовать цикл. 

// Задание 3
const array3 = [1, 3, 5, 10, 20];

const joinedString = array3.join(' ');
console.log(joinedString);

// Критерии оценки:
// - В консоль должна быть выведена строка, содержащая элементы массива, разделенные пробелом.
// Примените метод arr.join(' '); 

// Задание 4
const multiArray = [];

for (let i = 0; i < 3; i++) {
  const innerArray = [];
  for (let j = 0; j < 3; j++) {
    innerArray.push(1);
  }
  multiArray.push(innerArray);
}

console.log(multiArray);

// Критерии оценки:
// - В консоль должен быть выведен многомерный массив [[1, 1, 1], [1, 1, 1], [1, 1, 1]]
// Используйте два вложенных цикла for. 

// Задание 5
const array5 = [1, 1, 1];

array5.push(2, 2, 2);

console.log(array5);


// - В конце массива  добавлены три элемента со значением 2.
// - Итоговый массив выведен в консоль.
// метод push() для добавления элементов в конец массива. 

// Задание 6
let array6 = [9, 8, 7, 'a', 6, 5];

// Сначала удалим букву 'a' с помощью filter()
array6 = array6.filter(item => typeof item === 'number');

// Затем отсортируем числа с помощью sort()
array6.sort((a, b) => a - b);

console.log(array6);


// - Массив отсортирован по возрастанию.
// - Из массива удалена буква 'a'.
// - Итоговый массив д выведен в консоль.
// отсортирован массив, а затем используйте метод filter() для удаления буквы. 

// Задание 7
const array7 = [9, 8, 7, 6, 5];

const userGuess = prompt('Угадайте число от 5 до 9:');
const numericGuess = Number(userGuess);

if (array7.includes(numericGuess)) {
  alert('Угадал');
} else {
  alert('Не угадал');
}

// использован метод prompt для получения значения .
//  показан соответствующий alert.
//  метод includes() для проверки наличия элемента. 

// Задание 8
const string8 = 'abcdef';

// Преобразую строку в массив символов, обращаю массив и объединяю обратно в строку
const reversedString = string8.split('').reverse().join('');

console.log(reversedString);
// - В консоль выведена строка в обратном порядке: 'fedcba'.
// - Не создана новая строка, а выведена именно оригинальная строка, но пересортированная.
//Преобразована строка в массив, использован reverse() и снова преобразван в строку. 

// Задание 9
const multiArray9 = [[1, 2, 3],[4, 5, 6]];

// spread оператор для объединения внутренних массивов
const flatArray = [...multiArray9[0], ...multiArray9[1]];

console.log(flatArray);
// - В консоль выведен одномерный массив [1, 2, 3, 4, 5, 6].
// оператор spread для объединения массивов. 

// Задание 10
const array10 = [1, 5, 4, 2, 8, 7]; // Произвольные числа от 1 до 10

for (let i = 0; i < array10.length - 1; i++) {
  const sum = array10[i] + array10[i + 1];
  console.log(sum);
}

// - В консоль выведены суммы пар соседних элементов.
// - Для последнего элемента пара не формируется, поэтому его сумма не выводится.
// цикл for для перебора элементов и вычисления суммы.  

// Задание 11
function getSquares(arr) {
  return arr.map(number => number * number);
}

// Пример использования 
const array11 = [1, 2, 3, 4, 5];
const squaresArray = getSquares(array11);
console.log(squaresArray);
// - Функция возращает новый массив, содержащий квадраты элементов исходного массива.
// - Результат работы функции выведен в консоль.
//  метод map() для создания нового массива на основе исходного массива. 

// Задание 12
function getWordLengths(arr) {
  return arr.map(word => word.length);
}

// Пример 
const array12 = ['слово', 'длинное слово', 'еще'];
const lengthsArray = getWordLengths(array12);
// - Функция возвращает новый массив, содержащий длины строк исходного массива.
// - Результат работы функции  выведен в консоль.
// метод map() для создания нового массива, где каждый элемент является длиной строки из исходного массива. 

// Задание 13
function getNegativeNumbers(arr) {
    return arr.filter(number => number < 0);
  }
  
  // Пример использования (для проверки)
  const array13 = [1, -5, 4, -10, 0, 3, -2];
  const negativeNumbers = getNegativeNumbers(array13);
  console.log(negativeNumbers);


// - Функция возращает новый массив, содержащий только отрицательные числа исходного массива.
// - Результат работы функции выведен в консоль.
//  метод filter() для создания нового массива на основе условия проверки отрицательности числа. 

// Задание 14
const randomArray = [];
for (let i = 0; i < 10; i++) {
  randomArray.push(Math.floor(Math.random() * 11)); // От 0 до 10 включительно
}

const evenNumbersArray = randomArray.filter(number => number % 2 === 0);

console.log('Исходный массив:', randomArray);
console.log('Массив с четными значениями:', evenNumbersArray);


// - сгенерирован массив из 10 случайных чисел в указанном диапазоне.
// - оздан второй массив, содержащий только четные значения из исходного массива.
// - Оба массива выведены в консоль.
// цикл для генерации исходного массива и метод filter() для создания массива с четными числами. 

// Задание 15
const randomArray15 = [];
for (let i = 0; i < 6; i++) {
  randomArray15.push(Math.floor(Math.random() * 10) + 1); // От 1 до 10 включительно
}

const sum15 = randomArray15.reduce((acc, current) => acc + current, 0);
const average = sum15 / randomArray15.length;

console.log('Массив:', randomArray15);
console.log('Среднее арифметическое:', average);

// - сгенерирован массив из 6 случайных чисел в указанном диапазоне.
// - выведено среднее арифметическое элементов массива в консоль.
//  методом reduce() для суммирования всех элементов массива и деление результат на их количество. 